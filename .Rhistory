name = "Solar radiation (W/m²)")
) +
labs(title = "Figure F: Time–Height",
x = "Survey Date") +
theme_bw()
)
# 基础数据
df_plot <- plant_with_light %>%
filter(!is.na(survey_date), !is.na(height_cm), !is.na(weekly_avg_SlrW))
# 全局范围（用于 sec_axis 的一致变换）
y_rng     <- range(df_plot$height_cm, na.rm = TRUE)
light_rng <- range(df_plot$weekly_avg_SlrW, na.rm = TRUE)
# 每个 parent_pop × 日期 的平均光照，并把光照映射到高度轴（全局统一）
light_daily <- df_plot %>%
group_by(parent_pop, survey_date) %>%
summarise(light = mean(weekly_avg_SlrW, na.rm = TRUE), .groups = "drop") %>%
mutate(light_y = scales::rescale(light, to = y_rng, from = light_rng))
# 画图
ggplot() +
# 高度散点：颜色=光照强度
geom_point(data = df_plot,
aes(x = survey_date, y = height_cm, colour = weekly_avg_SlrW),
alpha = 0.45, size = 0.7) +
# 光照折线（已映射到高度轴）
geom_line(data = light_daily,
aes(x = survey_date, y = light_y, group = parent_pop),
colour = "black", linewidth = 0.5, alpha = 0.5) +
facet_wrap(~ parent_pop, ncol = 3) +           # 调小每行数量 → 面板更大
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)"
) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(
name = "Height (cm)",
sec.axis = sec_axis(~ scales::rescale(., from = y_rng, to = light_rng),
name = "Solar radiation (W/m²)")
) +
labs(title = "Figure F: Time–Height",
x = "Survey Date") +
theme_bw()
)
plant_with_light%>%
group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW)) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_line(alpha=0.5, size=1) +
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
plant_with_light%>%
group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW)) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point()
geom_line(alpha=0.5, size=1) +
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
plant_with_light%>%
group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW)) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point()+
geom_line(alpha=0.5, size=1) +
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
plant_with_light%>%
group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW)) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point(alpha=0.5,size=0.5)+
geom_line(alpha=0.5, size=1) +
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
View(light_raw)
# 光照原始表 light_raw: 包含 TIMESTAMP 和 SlrW_Avg
light_daily <- light_raw %>%
mutate(date = as.Date(TIMESTAMP)) %>%
group_by(date) %>%
summarise(SlrW_mean = mean(SlrW_Avg, na.rm = TRUE), .groups = "drop")
# 你的植株数据
df_plot <- plant_with_light %>%
filter(!is.na(survey_date), !is.na(height_cm), !is.na(weekly_avg_SlrW))
# 全局范围（用于 sec_axis 的一致变换）
y_rng     <- range(df_plot$height_cm, na.rm = TRUE)
light_rng <- range(light_daily$SlrW_mean, na.rm = TRUE)
# 把光照平均缩放到高度的 y 轴范围
light_daily <- light_daily %>%
mutate(light_y = scales::rescale(SlrW_mean, to = y_rng, from = light_rng))
plant_with_light%>%
group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW)) +
geom_line(data = light_daily,
aes(x = date, y = light_y),
colour = "black", linewidth = 1) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point(alpha=0.5,size=0.5)+
geom_line(alpha=0.5, size=1) +
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
# 光照原始表 light_raw: 包含 TIMESTAMP 和 SlrW_Avg
light_daily <- light_raw %>%
mutate(date = as.Date(TIMESTAMP)) %>%
group_by(date) %>%
summarise(SlrW_mean = mean(SlrW_Avg, na.rm = TRUE), .groups = "drop")
# 你的植株数据
df_plot <- plant_with_light %>%
filter(!is.na(survey_date), !is.na(height_cm), !is.na(weekly_avg_SlrW))
# 全局范围（用于 sec_axis 的一致变换）
y_rng     <- range(df_plot$height_cm, na.rm = TRUE)
light_rng <- range(light_daily$SlrW_mean, na.rm = TRUE)
# 把光照平均缩放到高度的 y 轴范围
light_daily <- light_daily %>%
mutate(light_y = scales::rescale(SlrW_mean, to = y_rng, from = light_rng))
plant_with_light%>%
group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW)) +
geom_line(data = light_daily,
aes(x = date, y = light_y),
colour = "black", linewidth = 1) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point(alpha=0.5,size=0.5)+
geom_line(alpha=0.5, size=1) +
scale_y_continuous(
name = "Height (cm)",
sec.axis = sec_axis(~ scales::rescale(., from = y_rng, to = light_rng),
name = "Daily mean solar radiation (W/m²)"))+
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
plant_with_light%>%
group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW)) +
geom_line(data = light_daily,
aes(x = date, y = light_y),
colour = "black", linewidth = 1) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point(alpha=0.5,size=0.5)+
geom_line(alpha=0.5, size=1) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(
name = "Height (cm)",
sec.axis = sec_axis(~ scales::rescale(., from = y_rng, to = light_rng),
name = "Daily mean solar radiation (W/m²)"))+
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
light_daily <- light_raw %>%
mutate(date = as.Date(TIMESTAMP)) %>%
group_by(date) %>%
summarise(SlrW_mean = mean(SlrW_Avg, na.rm = TRUE), .groups = "drop")
df_plot <- plant_with_light %>%
filter(!is.na(survey_date), !is.na(height_cm), !is.na(weekly_avg_SlrW))
y_rng     <- range(df_plot$height_cm, na.rm = TRUE)
light_rng <- range(light_daily$SlrW_mean, na.rm = TRUE)
light_daily <- light_daily %>%
mutate(light_y = scales::rescale(SlrW_mean, to = y_rng, from = light_rng))
plant_with_light%>%
group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW)) +
geom_line(data = light_daily,
aes(x = date, y = light_y),
colour = "black", linewidth = 0.5, alpha= 0.25) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point(alpha=0.5,size=0.5)+
geom_line(alpha=0.5, size=1) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(
name = "Height (cm)",
sec.axis = sec_axis(~ scales::rescale(., from = y_rng, to = light_rng),
name = "Solar Radiation (W/m²)"))+
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
plant_with_light%>%
group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW)) +
geom_line(data = light_daily,
aes(x = date, y = light_y),
colour = "black", linewidth = 0.5, alpha= 0.25) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point(alpha=0.25,size=0.5)+
geom_line(alpha=1, size=1) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(
name = "Height (cm)",
sec.axis = sec_axis(~ scales::rescale(., from = y_rng, to = light_rng),
name = "Solar Radiation (W/m²)"))+
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
light_daily <- light_raw %>%
mutate(date = as.Date(TIMESTAMP)) %>%
group_by(date) %>%
summarise(SlrW_mean = mean(SlrW_Avg, na.rm = TRUE), .groups = "drop")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(lubridate)
library(janitor)
library(purrr)
library(readr)
library(ggthemes)
library(ggeffects)
library(lme4)
library(dplyr)
library(ggplot2)
#install.packages("emmeans")
library(emmeans)
#install.packages("broom.mixed")
library(broom.mixed)
library(viridis)
library(nlme)
library(mgcv)
#setwd("C:/Users/Tobyz/Desktop/S.tort-light-growth/Data")
plant <- read.csv("Data/WL2-2023_Size_Combined.csv") %>%
clean_names() %>%
mutate(survey_date = as.Date(survey_date, format = "%m/%d/%Y"))
summary(plant)
#import light data
light_raw <- read_csv("Data/IntBioHalfHourTable_clean.txt")
#weekly measurement
weekly_light <- light_raw %>%
mutate(
timestamp = ymd_hms(TIMESTAMP),
SlrW_Avg = as.numeric(SlrW_Avg),  # turn into number format
week = floor_date(timestamp, "week")
) %>%
group_by(week) %>%
summarise(
weekly_avg_SlrW = mean(SlrW_Avg, na.rm = TRUE),
.groups = "drop"
)
# result
print(weekly_light)
#PID
plant_growth <- plant %>%
unite("PID", genotype:rep, sep = "_", remove = FALSE) %>%
mutate(survey_date = as.Date(survey_date))
#find out plants with negative growth
plant_growth %>%
arrange(PID, survey_date) %>%  # arrange in time sequence
group_by(PID) %>%
mutate(growth = height_cm - lag(height_cm)) %>%  # find out the diff btw nearby dates
summarise(has_negative_growth = any(growth < 0, na.rm = TRUE)) %>%
filter(has_negative_growth) -> neg_growth_plants
neg_growth_plants
#find out tolerance value
neg_growth_values <- plant_growth %>%
arrange(PID, survey_date) %>%
group_by(PID) %>%
mutate(growth = height_cm - lag(height_cm)) %>%
ungroup() %>%
filter(growth < 0)
ggplot(neg_growth_values, aes(x = growth)) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black") +
labs(
title = "Figure A: Distribution of Negative Growth Values",
x = "Height Decrease (cm)",
y = "Count"
) +
theme_bw()
#filter out plants with negative growth < -5
plant_growth_cleaned <- plant_growth
repeat {
plant_growth_cleaned <- plant_growth_cleaned %>%
arrange(PID, survey_date) %>%
group_by(PID) %>%
mutate(growth = height_cm - lag(height_cm)) %>%
filter(is.na(growth) | growth >= -5) %>%
select(-growth) %>%
ungroup()
check <- plant_growth_cleaned %>%
arrange(PID, survey_date) %>%
group_by(PID) %>%
mutate(growth = height_cm - lag(height_cm)) %>%
filter(growth < -5)
if (nrow(check) == 0) break
}
#define daily growth rate
plant_growth_daily <- plant_growth_cleaned %>%
arrange(PID, survey_date) %>%
group_by(PID) %>%
mutate(
prev_height = lag(height_cm),
prev_date = lag(survey_date),
days_elapsed = as.numeric(survey_date - prev_date),
daily_growth = (height_cm - prev_height) / days_elapsed
) %>%
ungroup()
#Align plant growth data to week
plant_weekly <- plant_growth_daily %>%
filter(!is.na(daily_growth), days_elapsed > 0) %>%
mutate(week = floor_date(survey_date, "week"))
#Adds `weekly_avg_SlrW` to plant data
plant_with_light <- plant_weekly %>%
left_join(weekly_light, by = "week")
#Calculate correlation
cor_result <- cor(
plant_with_light$daily_growth,
plant_with_light$weekly_avg_SlrW,
use = "complete.obs"
)
print(cor_result)
#Plot correlation
ggplot(plant_with_light, aes(x = weekly_avg_SlrW, y = daily_growth)) +
geom_point(alpha = 0.2) +
geom_smooth(method = "lm", color = "red") +
labs(title = "Figure B: Correlation between Light and Growth", x = "Weekly Avg Light (SlrW)", y = "Daily Growth (cm/day)") +
theme_bw()
#Standardization
plant_with_light$weekly_avg_SlrW2 <- scale(plant_with_light$weekly_avg_SlrW, center = TRUE, scale = TRUE)
mean_light <- mean(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
sd_light   <- sd(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
#Change Data type
plant_with_light <- plant_with_light %>%
mutate(
parent_pop = factor(parent_pop),
PID        = factor(PID),
block      = factor(block)
)
growth_light.lmer <- lmer(
daily_growth ~ weekly_avg_SlrW2 +
(1 + weekly_avg_SlrW2 | parent_pop),
data = plant_with_light, REML = TRUE
)
summary(growth_light.lmer)
#Unscaling
pred_all <- ggpredict(growth_light.lmer, terms = "weekly_avg_SlrW2") %>%
as.data.frame() %>%
mutate(light_orig = x * sd_light + mean_light)
#Plot
p_overall <- ggplot() +
geom_hex(data = plant_with_light,
aes(x = weekly_avg_SlrW, y = daily_growth), bins = 35) +
scale_fill_viridis_c(name = "Count") +
geom_ribbon(data = pred_all,
aes(x = light_orig, ymin = conf.low, ymax = conf.high),
alpha = .22, fill = "grey60") +
geom_line(data = pred_all,
aes(x = light_orig, y = predicted), linewidth = 1) +
labs(title = "Figure C: Effect of Weekly Light on Daily Growth (overall)",
x = "Weekly Avg Light (W/m²)",
y = "Predicted Daily Growth (cm/day)") +
theme_bw() +
theme(panel.grid.minor = element_blank())
p_overall
p_facet <- ggplot(plant_with_light,
aes(weekly_avg_SlrW, daily_growth)) +
facet_wrap(~ parent_pop, ncol = 6) +
geom_point(alpha = .15, size = .6, color = "grey35") +
geom_smooth(method = "lm", se = FALSE, linewidth = .8) +
labs(title = "Figure D: Light–Growth relationship by population",
x = "Weekly Avg Light (W/m²)",
y = "Daily Growth (cm/day)") +
theme_bw() +
theme(strip.background = element_rect(fill = "grey95", color = NA),
strip.text = element_text(face = "bold"),
panel.grid.minor = element_blank())
p_facet
#slope and standard deviation of fixed effects
b_fix  <- fixef(growth_light.lmer)["weekly_avg_SlrW2"]
V_fix  <- vcov(growth_light.lmer)["weekly_avg_SlrW2","weekly_avg_SlrW2"]
#slope and standard deviation of random effects
re <- ranef(growth_light.lmer, condVar = TRUE)
re_pop <- re$parent_pop
postVar <- attr(re$parent_pop, "postVar")
sl_col <- which(colnames(re_pop) == "weekly_avg_SlrW2")
#create the tibble of slopes for each population
pop_slope <- tibble(
parent_pop   = rownames(re_pop),
rand_slope   = re_pop[ , "weekly_avg_SlrW2"],
rand_var     = sapply(seq_len(dim(postVar)[3]), function(i) postVar[sl_col, sl_col, i])
) %>%
mutate(
slope_SD   = b_fix + rand_slope,
se_SD      = sqrt(V_fix + rand_var),
lower_SD   = slope_SD - 1.96*se_SD,
upper_SD   = slope_SD + 1.96*se_SD
)
sd_light <- sd(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
pop_slope <- pop_slope %>%
mutate(
slope_per_Wm2 = slope_SD / sd_light,
lower_per_Wm2 = lower_SD / sd_light,
upper_per_Wm2 = upper_SD / sd_light
)%>%
select(parent_pop, slope_per_Wm2, lower_per_Wm2, upper_per_Wm2)
pop_slope
write.csv(pop_slope, "population_slopes.csv", row.names = FALSE)
#plot
ggplot(pop_slope, aes(x = reorder(parent_pop, slope_per_Wm2), y = slope_per_Wm2)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_pointrange(aes(ymin = lower_per_Wm2, ymax = upper_per_Wm2), linewidth = .6) +
coord_flip() +
labs(title = "Figure E: Population-specific slopes with 95% CI",
x = "Population", y = "Slope (cm/day per W/m²)") +
theme_bw()
light_daily <- light_raw %>%
mutate(date = as.Date(TIMESTAMP)) %>%
group_by(date) %>%
summarise(SlrW_mean = mean(SlrW_Avg, na.rm = TRUE), .groups = "drop")
df_plot <- plant_with_light %>%
filter(!is.na(survey_date), !is.na(height_cm), !is.na(weekly_avg_SlrW))
y_rng     <- range(df_plot$height_cm, na.rm = TRUE)
light_rng <- range(light_daily$SlrW_mean, na.rm = TRUE)
light_daily <- light_daily %>%
mutate(light_y = scales::rescale(SlrW_mean, to = y_rng, from = light_rng))
plant_with_light%>%
group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW)) +
#  geom_line(data = light_daily,
#            aes(x = date, y = light_y),
#            colour = "black", linewidth = 0.5, alpha= 0.25) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point(alpha=0.25,size=0.5)+
geom_line(alpha=1, size=1) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(
name = "Height (cm)")+
#    sec.axis = sec_axis(~ scales::rescale(., from = y_rng, to = light_rng),
#                        name = "Solar Radiation (W/m²)"))+
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
plant_with_light%>%
#  group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW, group=PID)) +
#  geom_line(data = light_daily,
#            aes(x = date, y = light_y),
#            colour = "black", linewidth = 0.5, alpha= 0.25) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point(alpha=0.25,size=0.5)+
geom_line(alpha=1, size=1) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(
name = "Height (cm)")+
#    sec.axis = sec_axis(~ scales::rescale(., from = y_rng, to = light_rng),
#                        name = "Solar Radiation (W/m²)"))+
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
plant_with_light%>%
#  group_by(parent_pop)%>%
ggplot(aes(survey_date, height_cm, colour = weekly_avg_SlrW, group=PID)) +
#  geom_line(data = light_daily,
#            aes(x = date, y = light_y),
#            colour = "black", linewidth = 0.5, alpha= 0.25) +
facet_wrap(~parent_pop)+
scale_colour_gradientn(                         # 低=蓝，高=红
colours = c("#2c7bb6","#abd9e9","#ffffbf","#fdae61","#d7191c"),
name = "solar radiation (W/m²)")+
geom_point(alpha=0.25,size=0.5)+
geom_line(alpha=0.5) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(
name = "Height (cm)")+
#    sec.axis = sec_axis(~ scales::rescale(., from = y_rng, to = light_rng),
#                        name = "Solar Radiation (W/m²)"))+
labs(title = "Figure F: Time-Height",
x = "Survey Date",
y = "Height (cm)") +
theme_bw()
