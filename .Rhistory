})
results <- map(files, safe_read_process)
successful_results <- keep(results, ~ !is.null(.x$result))
successful_data <- bind_rows(map(successful_results, "result"), .id = "source_index")
#clean data
plant <- successful_data %>%
select(-starts_with("x"))%>%
mutate(
height_cm = parse_number(height_cm),
long_leaf_cm = parse_number(long_leaf_cm),
date=mdy(date)
)
summary(plant)
#import light data
light_raw <- read_csv("CR1000XSeries_IntBioHalfHourTable.txt", skip = 1, show_col_types = FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(janitor)
library(purrr)
library(readr)
#import
files <- list.files(path = "Data/", pattern = "WL2_size_survey_.*_corrected\\.csv", full.names = TRUE)
safe_read_process <- safely(function(f) {
df <- read_csv(f, col_types = cols(.default = "c")) %>%
clean_names()
df$source_file <- f
return(df)
})
results <- map(files, safe_read_process)
successful_results <- keep(results, ~ !is.null(.x$result))
successful_data <- bind_rows(map(successful_results, "result"), .id = "source_index")
#clean data
plant <- successful_data %>%
select(-starts_with("x"))%>%
mutate(
height_cm = parse_number(height_cm),
long_leaf_cm = parse_number(long_leaf_cm),
date=mdy(date)
)
summary(plant)
#import light data
light_raw <- read_csv("CR1000XSeries_IntBioHalfHourTable.txt", skip = 1, show_col_types = FALSE)
#import light data
light_raw <- read_csv("Data/IntBioHalfHourTable_clean.txt")
#weekly measurement
weekly_light <- light_raw %>%
mutate(
timestamp = ymd_hms(TIMESTAMP),
SlrW_Avg = as.numeric(SlrW_Avg),  # turn into number format
week = floor_date(timestamp, "week")
) %>%
group_by(week) %>%
summarise(
weekly_avg_SlrW = mean(SlrW_Avg, na.rm = TRUE),
.groups = "drop"
)
# result
print(weekly_light)
#import light data
light_raw <- read_csv("CR1000XSeries_IntBioHalfHourTable.txt", skip = 1, show_col_types = FALSE)
#import light data
light_raw <- read_csv("Data/IntBioHalfHourTable_clean.txt")
#weekly measurement
weekly_light <- light_raw %>%
mutate(
timestamp = ymd_hms(TIMESTAMP),
SlrW_Avg = as.numeric(SlrW_Avg),  # turn into number format
week = floor_date(timestamp, "week")
) %>%
group_by(week) %>%
summarise(
weekly_avg_SlrW = mean(SlrW_Avg, na.rm = TRUE),
.groups = "drop"
)
# result
print(weekly_light)
plant_growth <- plant %>%
filter(date %in% as.Date(c("2023-08-02", "2023-10-23"))) %>%
group_by(block, bed, bed_row, bed_col) %>%
arrange(date) %>%
summarise(
height_growth = diff(height_cm),
leaf_growth = diff(long_leaf_cm),
.groups = "drop"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(lubridate)
library(janitor)
library(purrr)
library(readr)
library(ggthemes)
#import
files <- list.files(path = "Data/", pattern = "WL2_size_survey_.*_corrected\\.csv", full.names = TRUE)
safe_read_process <- safely(function(f) {
df <- read_csv(f, col_types = cols(.default = "c")) %>%
clean_names()
df$source_file <- f
return(df)
})
results <- map(files, safe_read_process)
successful_results <- keep(results, ~ !is.null(.x$result))
successful_data <- bind_rows(map(successful_results, "result"), .id = "source_index")
#clean data
plant <- successful_data %>%
select(-starts_with("x"))%>%
mutate(
height_cm = parse_number(height_cm),
long_leaf_cm = parse_number(long_leaf_cm),
date=mdy(date)
)
summary(plant)
#import light data
light_raw <- read_csv("Data/IntBioHalfHourTable_clean.txt")
#weekly measurement
weekly_light <- light_raw %>%
mutate(
timestamp = ymd_hms(TIMESTAMP),
SlrW_Avg = as.numeric(SlrW_Avg),  # turn into number format
week = floor_date(timestamp, "week")
) %>%
group_by(week) %>%
summarise(
weekly_avg_SlrW = mean(SlrW_Avg, na.rm = TRUE),
.groups = "drop"
)
# result
print(weekly_light)
install.packages(ggthemes)
install.packages("ggthemes")
library(ggthemes)
plant_growth <- plant %>%
filter(date %in% as.Date(c("2023-08-02", "2023-10-23"))) %>%
group_by(block, bed, bed_row, bed_col) %>%
arrange(date) %>%
summarise(
height_growth = diff(height_cm),
leaf_growth = diff(long_leaf_cm),
.groups = "drop"
)
'''
plat_growth = plant |>
unite("PID", pop:rep, sep = "_") |> # create a unique plant ID
mutate(date_axis = format(date, "%b %e"),
date_axis = factor(date_axis, levels = unique(date_axis))) |>
select(PID, date_axis, height_cm)
'''
plat_growth = plant |>
unite("PID", pop:rep, sep = "_") |> # create a unique plant ID
mutate(date_axis = format(date, "%b %e"),
date_axis = factor(date_axis, levels = unique(date_axis))) |>
select(PID, date_axis, height_cm)
'''
# Will write this data once in a csv and read it in next time
# write_csv(plat_growth, "Data/plant_growth.csv")
plant_growth = read_csv("Data/plant_growth.csv")
ggplot(plat_growth, aes(x = date_axis, y = height_cm, group = PID)) +
geom_line() +
labs(title = "Growth Curve of Plants", x = "Date", y = "Height (cm)") +
theme_bw() +
theme(legend.position = "bottom")
plat_growth = plant |>
unite("PID", pop:rep, sep = "_") |> # create a unique plant ID
mutate(date_axis = format(date, "%b %e"),
date_axis = factor(date_axis, levels = unique(date_axis))) |>
select(PID, date_axis, height_cm)
# Will write this data once in a csv and read it in next time
# write_csv(plat_growth, "Data/plant_growth.csv")
plant_growth = read_csv("Data/plant_growth.csv")
ggplot(plat_growth, aes(x = date_axis, y = height_cm, group = PID)) +
geom_line() +
labs(title = "Growth Curve of Plants", x = "Date", y = "Height (cm)") +
theme_bw() +
theme(legend.position = "bottom")
View(plat_growth)
View(plant_growth)
View(plant_growth)
View(plant)
knitr::opts_chunk$set(echo = TRUE)
plant %>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
group_by(date) %>%
summarise(
total = n(),
missing = sum(is.na(height_cm)),
present = sum(!is.na(height_cm))
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(lubridate)
library(janitor)
library(purrr)
library(readr)
library(ggthemes)
#setwd("C:/Users/Tobyz/Desktop/S.tort-light-growth/Data")
#import
files <- list.files(path = "Data/", pattern = "WL2_size_survey_.*_corrected\\.csv", full.names = TRUE)
safe_read_process <- safely(function(f) {
df <- read_csv(f, col_types = cols(.default = "c")) %>%
clean_names()
df$source_file <- f
return(df)
})
results <- map(files, safe_read_process)
successful_results <- keep(results, ~ !is.null(.x$result))
successful_data <- bind_rows(map(successful_results, "result"), .id = "source_index")
#clean data
plant <- successful_data %>%
select(-starts_with("x"))%>%
mutate(
height_cm = parse_number(height_cm),
long_leaf_cm = parse_number(long_leaf_cm),
date=mdy(date)
)
summary(plant)
#import light data
light_raw <- read_csv("Data/IntBioHalfHourTable_clean.txt")
#weekly measurement
weekly_light <- light_raw %>%
mutate(
timestamp = ymd_hms(TIMESTAMP),
SlrW_Avg = as.numeric(SlrW_Avg),  # turn into number format
week = floor_date(timestamp, "week")
) %>%
group_by(week) %>%
summarise(
weekly_avg_SlrW = mean(SlrW_Avg, na.rm = TRUE),
.groups = "drop"
)
# result
print(weekly_light)
plant_growth <- plant %>%
filter(date %in% as.Date(c("2023-08-02", "2023-10-23"))) %>%
group_by(block, bed, bed_row, bed_col) %>%
arrange(date) %>%
summarise(
height_growth = diff(height_cm),
leaf_growth = diff(long_leaf_cm),
.groups = "drop"
)
plat_growth = plant |>
unite("PID", pop:rep, sep = "_") |> # create a unique plant ID
mutate(date_axis = format(date, "%b %e"),
date_axis = factor(date_axis, levels = unique(date_axis))) |>
select(PID, date_axis, height_cm)
# Will write this data once in a csv and read it in next time
# write_csv(plat_growth, "Data/plant_growth.csv")
plant_growth = read_csv("Data/plant_growth.csv")
ggplot(plat_growth, aes(x = date_axis, y = height_cm, group = PID)) +
geom_line() +
labs(title = "Growth Curve of Plants", x = "Date", y = "Height (cm)") +
theme_bw() +
theme(legend.position = "bottom")
plant %>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
group_by(date) %>%
summarise(
total = n(),
missing = sum(is.na(height_cm)),
present = sum(!is.na(height_cm))
)
levels(plant_growth$date_axis)
unique(plant_growth$date_axis)
levels(plant_growth$date_axis)
unique(plant_growth$date_axis)
levels(plant_growth$date_axis)
unique(plant_growth$date_axis)
levels(plant_growth$date_axis)
plant_growth %>% filter(date_axis == "Oct 13") %>% summary()
unique(plant_growth$date_axis)
levels(plant_growth$date_axis)
table(plant$date)
plant_growth %>% filter(date_axis == "Oct 13") %>% summary()
plant_growth <- plant |>
unite("PID", pop:rep, sep = "_") |>
mutate(
date_axis = format(date, "%b %d"),
date_axis = factor(date_axis, levels = format(sort(unique(date)), "%b %d"))
) |>
select(PID, date_axis, height_cm)
# Will write this data once in a csv and read it in next time
# write_csv(plat_growth, "Data/plant_growth.csv")
plant_growth = read_csv("Data/plant_growth.csv")
ggplot(plat_growth, aes(x = date_axis, y = height_cm, group = PID)) +
geom_line() +
labs(title = "Growth Curve of Plants", x = "Date", y = "Height (cm)") +
theme_bw() +
theme(legend.position = "bottom")
plant %>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
group_by(date) %>%
summarise(
total = n(),
missing = sum(is.na(height_cm)),
present = sum(!is.na(height_cm))
)
unique(plant_growth$date_axis)
levels(plant_growth$date_axis)
table(plant$date)
plant_growth %>% filter(date_axis == "Oct 13") %>% summary()
plant_growth <- plant |>
unite("PID", pop:rep, sep = "_") |>
mutate(
date_axis = format(date, "%b %d"),
date_axis = factor(date_axis, levels = format(sort(unique(date)), "%b %d"))
) |>
select(PID, date_axis, height_cm)
# Will write this data once in a csv and read it in next time
# write_csv(plat_growth, "Data/plant_growth.csv")
plant_growth = read_csv("Data/plant_growth.csv")
ggplot(plat_growth, aes(x = date_axis, y = height_cm, group = PID)) +
geom_line() +
labs(title = "Growth Curve of Plants", x = "Date", y = "Height (cm)") +
theme_bw() +
theme(legend.position = "bottom")
plant %>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
group_by(date) %>%
summarise(
total = n(),
missing = sum(is.na(height_cm)),
present = sum(!is.na(height_cm))
)
unique(plant_growth$date_axis)
levels(plant_growth$date_axis)
table(plant$date)
plant_growth %>% filter(date_axis == "Oct 13") %>% summary()
plat_growth = plant |>
unite("PID", pop:rep, sep = "_") |> # create a unique plant ID
mutate(date_axis = format(date, "%b %e"),
date_axis = factor(date_axis, levels = unique(date_axis))) |>
select(PID, date_axis, height_cm)
# Will write this data once in a csv and read it in next time
# write_csv(plat_growth, "Data/plant_growth.csv")
plant_growth = read_csv("Data/plant_growth.csv")
ggplot(plat_growth, aes(x = date_axis, y = height_cm, group = PID)) +
geom_line() +
labs(title = "Growth Curve of Plants", x = "Date", y = "Height (cm)") +
theme_bw() +
theme(legend.position = "bottom")
plant %>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
group_by(date) %>%
summarise(
total = n(),
missing = sum(is.na(height_cm)),
present = sum(!is.na(height_cm))
)
unique(plant_growth$date_axis)
levels(plant_growth$date_axis)
table(plant$date)
plant_growth %>% filter(date_axis == "Oct 13") %>% summary()
plant_growth <- plant |>
unite("PID", pop:rep, sep = "_") |>
mutate(
date_axis = format(date, "%b %d"),
date_axis = factor(date_axis, levels = format(sort(unique(date)), "%b %d"))
) |>
select(PID, date_axis, height_cm)
# Will write this data once in a csv and read it in next time
# write_csv(plat_growth, "Data/plant_growth.csv")
plant_growth = read_csv("Data/plant_growth.csv")
ggplot(plat_growth, aes(x = date_axis, y = height_cm, group = PID)) +
geom_line() +
labs(title = "Growth Curve of Plants", x = "Date", y = "Height (cm)") +
theme_bw() +
theme(legend.position = "bottom")
plant %>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
group_by(date) %>%
summarise(
total = n(),
missing = sum(is.na(height_cm)),
present = sum(!is.na(height_cm))
)
unique(plant_growth$date_axis)
levels(plant_growth$date_axis)
table(plant$date)
plant_growth %>% filter(date_axis == "Oct 13") %>% summary()
plant_growth <- plant |>
unite("PID", pop:rep, sep = "_") |>
mutate(
date_axis = format(date, "%b %d"),
date_axis = factor(date_axis, levels = format(sort(unique(date)), "%b %d"))
) |>
select(PID, date_axis, height_cm)
# Will write this data once in a csv and read it in next time
# write_csv(plat_growth, "Data/plant_growth.csv")
plant_growth = read_csv("Data/plant_growth.csv")
ggplot(plat_growth, aes(x = date_axis, y = height_cm, group = PID)) +
geom_line() +
geom_point(alpha = 0.1)+
labs(title = "Growth Curve of Plants", x = "Date", y = "Height (cm)") +
theme_bw() +
theme(legend.position = "bottom")
plant %>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
group_by(date) %>%
summarise(
total = n(),
missing = sum(is.na(height_cm)),
present = sum(!is.na(height_cm))
)
unique(plant_growth$date_axis)
levels(plant_growth$date_axis)
table(plant$date)
plant_growth %>% filter(date_axis == "Oct 13") %>% summary()
plant_growth %>%
filter(date_axis %in% c("Sep 20", "Sep 27")) %>%
group_by(PID, date_axis) %>%
summarize(has_data = any(!is.na(height_cm))) %>%
pivot_wider(names_from = date_axis, values_from = has_data) %>%
filter(`Sep 20` & `Sep 27`)
plant_growth %>%
filter(date_axis %in% c("Sep 20", "Sep 27")) %>%
group_by(PID, date_axis) %>%
summarize(has_data = any(!is.na(height_cm))) %>%
pivot_wider(names_from = date_axis, values_from = has_data) %>%
filter(`Sep 27`&`Oct 13`)
plant_growth %>%
filter(date_axis %in% c("Sep 20", "Sep 27")) %>%
group_by(PID, date_axis) %>%
summarize(has_data = any(!is.na(height_cm))) %>%
pivot_wider(names_from = date_axis, values_from = has_data) %>%
filter(`Sep 27`&`Oct 13`)
plant_growth %>%
filter(date_axis %in% c("Sep 20", "Sep 27")) %>%
group_by(PID, date_axis) %>%
summarize(has_data = any(!is.na(height_cm))) %>%
pivot_wider(names_from = date_axis, values_from = has_data) %>%
filter(`Sep 20` & `Sep 27` & `Oct 13`)
plant_growth %>%
filter(date_axis %in% c("Sep 20", "Sep 27", "Oct 13")) %>%
group_by(PID, date_axis) %>%
summarise(has_data = any(!is.na(height_cm)), .groups = "drop") %>%
pivot_wider(names_from = date_axis, values_from = has_data) %>%
filter(`Sep 20` & `Sep 27` & `Oct 13`)
plant_growth %>%
filter(date_axis %in% c("Sep 27", "Oct 13")) %>%
group_by(PID, date_axis) %>%
summarise(has_data = any(!is.na(height_cm)), .groups = "drop") %>%
pivot_wider(names_from = date_axis, values_from = has_data) %>%
filter(`Sep 27` & `Oct 13`)
raw_check <- plant %>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
filter(!is.na(height_cm)) %>%    # 只看非 NA
group_by(PID, date) %>%
summarise(n_obs = n(), .groups="drop") %>%
pivot_wider(
id_cols = PID,
names_from = date,
values_from = n_obs,
values_fill = 0
)
raw_check <- plant %>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
filter(!is.na(height_cm)) %>%    # 只看非 NA
group_by(PID, date) %>%
summarise(n_obs = n(), .groups="drop") %>%
pivot_wider(
id_cols = PID,
names_from = date,
values_from = n_obs,
values_fill = 0
)
plant_growth %>%
filter(date_axis %in% c("Sep 27", "Oct 13")) %>%
group_by(block, bed, bed_row, bed_col, date_axis) %>%
summarise(has_data = any(!is.na(height_cm)), .groups = "drop") %>%
pivot_wider(names_from = date_axis, values_from = has_data) %>%
filter(`Sep 27` & `Oct 13`)
raw_check <- plant %>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
filter(!is.na(height_cm)) %>%    # 只看非 NA
group_by(block, bed, bed_row, bed_col, date) %>%
summarise(n_obs = n(), .groups="drop") %>%
pivot_wider(
id_cols = PID,
names_from = date,
values_from = n_obs,
values_fill = 0
)
raw_check <- plant %>%
unite("PID", pop:rep, sep = "_")%>%
filter(date %in% as.Date(c("2023-09-27", "2023-10-13"))) %>%
filter(!is.na(height_cm)) %>%
group_by(PID, date) %>%
summarise(n_obs = n(), .groups="drop") %>%
pivot_wider(
id_cols = PID,
names_from = date,
values_from = n_obs,
values_fill = 0
)
raw_check
View(plant)
plant %>%
group_by(date) %>%
summarise(n = n())
plant_growth <- plant %>%
filter(date %in% as.Date(c("2023-08-02", "2023-10-23"))) %>%
group_by(block, bed, bed_row, bed_col) %>%
arrange(date) %>%
summarise(
height_growth = diff(height_cm),
leaf_growth = diff(long_leaf_cm),
.groups = "drop"
)
plant_growth
