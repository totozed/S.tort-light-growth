)
summary(fit_lmm)
pred_all <- ggpredict(fit_lmm, terms = "weekly_avg_SlrW2") |>
as.data.frame() |>
mutate(light_orig = x * sd_light + mean_light)
p_overall <- ggplot() +
geom_hex(data = plant_with_light,
aes(x = weekly_avg_SlrW, y = daily_growth), bins = 35) +
scale_fill_viridis_c(name = "Count") +
geom_ribbon(data = pred_all,
aes(x = light_orig, ymin = conf.low, ymax = conf.high),
alpha = .22, fill = "grey60") +
geom_line(data = pred_all,
aes(x = light_orig, y = predicted), linewidth = 1) +
labs(title = "Effect of Weekly Light on Daily Growth (overall)",
x = "Weekly Avg Light (W/m²)",
y = "Predicted Daily Growth (cm/day)") +
theme_minimal(base_size = 12) +
theme(panel.grid.minor = element_blank())
p_overall
p_facet <- ggplot(plant_with_light,
aes(weekly_avg_SlrW, daily_growth)) +
facet_wrap(~ parent_pop, ncol = 6) +
geom_point(alpha = .15, size = .6, color = "grey35") +
geom_smooth(method = "lm", se = FALSE, linewidth = .8) +
labs(title = "Light–Growth relationship by population",
x = "Weekly Avg Light (W/m²)",
y = "Daily Growth (cm/day)") +
theme_minimal(base_size = 11) +
theme(strip.background = element_rect(fill = "grey95", color = NA),
strip.text = element_text(face = "bold"),
panel.grid.minor = element_blank())
p_facet
emm_slopes <- emtrends(fit_lmm, ~ parent_pop, var = "weekly_avg_SlrW2") |>
as.data.frame() |>
rename(slope_SD = weekly_avg_SlrW2) |>
mutate(
slope_per_Wm2 = slope_SD / sd_light,
lower_per_Wm2 = lower.CL / sd_light,
upper_per_Wm2 = upper.CL / sd_light
)
#install.packages("emmeans")
library(emmeans)
？untidy
?untidy
emm_slopes <- emtrends(fit_lmm, ~ parent_pop, var = "weekly_avg_SlrW2") |>
as.data.frame() |>
rename(slope_SD = weekly_avg_SlrW2) |>
mutate(
slope_per_Wm2 = slope_SD / sd_light,
lower_per_Wm2 = lower.CL / sd_light,
upper_per_Wm2 = upper.CL / sd_light
)
#Standardization
plant_with_light$weekly_avg_SlrW2 <- scale(plant_with_light$weekly_avg_SlrW, center = TRUE, scale = TRUE)
mean_light <- mean(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
sd_light   <- sd(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
#Change Data type
plant_with_light <- plant_with_light %>%
mutate(
parent_pop = factor(parent_pop),
PID        = factor(PID),
block      = factor(block)
)
fit_lmm <- lmer(
daily_growth ~ weekly_avg_SlrW2 +
(1 + weekly_avg_SlrW2 | parent_pop),
data = plant_with_light, REML = TRUE
)
summary(fit_lmm)
growth_light.lmer <- lmer(
daily_growth ~ weekly_avg_SlrW2 +
(1 + weekly_avg_SlrW2 | parent_pop),
data = plant_with_light, REML = TRUE
)
summary(fit_lmm)
emm_slopes <- emtrends(growth_light.lmer, ~ parent_pop, var = "weekly_avg_SlrW2") |>
as.data.frame() |>
rename(slope_SD = weekly_avg_SlrW2) |>
mutate(
slope_per_Wm2 = slope_SD / sd_light,
lower_per_Wm2 = lower.CL / sd_light,
upper_per_Wm2 = upper.CL / sd_light
)
#Standardization
plant_with_light$weekly_avg_SlrW2 <- scale(plant_with_light$weekly_avg_SlrW, center = TRUE, scale = TRUE)
mean_light <- mean(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
sd_light   <- sd(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
#Change Data type
plant_with_light <- plant_with_light %>%
mutate(
parent_pop = factor(parent_pop),
PID        = factor(PID),
block      = factor(block)
)
growth_light.lmer <- lmer(
daily_growth ~ weekly_avg_SlrW2 +
(1 + weekly_avg_SlrW2 | parent_pop),
data = plant_with_light, REML = TRUE
)
summary(growth_light.lmer)
pred_all <- ggpredict(growth_light.lmer, terms = "weekly_avg_SlrW2") |>
as.data.frame() |>
mutate(light_orig = x * sd_light + mean_light)
p_overall <- ggplot() +
geom_hex(data = plant_with_light,
aes(x = weekly_avg_SlrW, y = daily_growth), bins = 35) +
scale_fill_viridis_c(name = "Count") +
geom_ribbon(data = pred_all,
aes(x = light_orig, ymin = conf.low, ymax = conf.high),
alpha = .22, fill = "grey60") +
geom_line(data = pred_all,
aes(x = light_orig, y = predicted), linewidth = 1) +
labs(title = "Effect of Weekly Light on Daily Growth (overall)",
x = "Weekly Avg Light (W/m²)",
y = "Predicted Daily Growth (cm/day)") +
theme_minimal(base_size = 12) +
theme(panel.grid.minor = element_blank())
p_overall
p_facet <- ggplot(plant_with_light,
aes(weekly_avg_SlrW, daily_growth)) +
facet_wrap(~ parent_pop, ncol = 6) +
geom_point(alpha = .15, size = .6, color = "grey35") +
geom_smooth(method = "lm", se = FALSE, linewidth = .8) +
labs(title = "Light–Growth relationship by population",
x = "Weekly Avg Light (W/m²)",
y = "Daily Growth (cm/day)") +
theme_minimal(base_size = 11) +
theme(strip.background = element_rect(fill = "grey95", color = NA),
strip.text = element_text(face = "bold"),
panel.grid.minor = element_blank())
p_facet
emm_slopes <- emtrends(growth_light.lmer, ~ parent_pop, var = "weekly_avg_SlrW2") |>
as.data.frame() |>
rename(slope_SD = weekly_avg_SlrW2) |>
mutate(
slope_per_Wm2 = slope_SD / sd_light,
lower_per_Wm2 = lower.CL / sd_light,
upper_per_Wm2 = upper.CL / sd_light
)
View(growth_light.lmer)
view(growth_light.lmer)
growth_light.lmer
b_fix  <- fixef(growth_light.lmer)["weekly_avg_SlrW2"]
V_fix  <- vcov(growth_light.lmer)["weekly_avg_SlrW2","weekly_avg_SlrW2"]
# 3) 取随机效应及其条件方差（每个群体的随机斜率方差）
re <- ranef(growth_light.lmer, condVar = TRUE)  # list，含 postVar
re_pop <- re$parent_pop                              # data.frame
postVar <- attr(re$parent_pop, "postVar")            # 3D array: (coef x coef x groups)
# 找到“随机斜率”的列名索引
sl_col <- which(colnames(re_pop) == "weekly_avg_SlrW2")
out <- tibble(
parent_pop   = rownames(re_pop),
rand_slope   = re_pop[ , "weekly_avg_SlrW2"],
rand_var     = sapply(seq_len(dim(postVar)[3]), function(i) postVar[sl_col, sl_col, i])
) %>%
mutate(
slope_SD   = b_fix + rand_slope,                         # 每组斜率（以“每1个SD光照”为单位）
se_SD      = sqrt(V_fix + rand_var),                     # 近似合成SE
lower_SD   = slope_SD - 1.96*se_SD,
upper_SD   = slope_SD + 1.96*se_SD
)
# 4) 换算到“每 W/m²”的斜率
sd_light <- sd(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
out <- out %>%
mutate(
slope_per_Wm2 = slope_SD / sd_light,
lower_per_Wm2 = lower_SD / sd_light,
upper_per_Wm2 = upper_SD / sd_light
)
# 5) 森林图
ggplot(out, aes(x = reorder(parent_pop, slope_per_Wm2), y = slope_per_Wm2)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_pointrange(aes(ymin = lower_per_Wm2, ymax = upper_per_Wm2), linewidth = .6) +
coord_flip() +
labs(title = "Population-specific slopes with 95% CI (from random-slope LMM)",
x = "Population", y = "Slope (cm/day per W/m²)") +
theme_minimal(base_size = 12)
pred_all <- ggpredict(growth_light.lmer, terms = "weekly_avg_SlrW2") |>
as.data.frame() |>
mutate(light_orig = x * sd_light + mean_light)
p_overall <- ggplot() +
geom_hex(data = plant_with_light,
aes(x = weekly_avg_SlrW, y = daily_growth), bins = 35) +
scale_fill_viridis_c(name = "Count") +
geom_ribbon(data = pred_all,
aes(x = light_orig, ymin = conf.low, ymax = conf.high),
alpha = .22, fill = "grey60") +
geom_line(data = pred_all,
aes(x = light_orig, y = predicted), linewidth = 1) +
labs(title = "Effect of Weekly Light on Daily Growth (overall)",
x = "Weekly Avg Light (W/m²)",
y = "Predicted Daily Growth (cm/day)") +
theme_bw +
theme(panel.grid.minor = element_blank())
pred_all <- ggpredict(growth_light.lmer, terms = "weekly_avg_SlrW2") |>
as.data.frame() |>
mutate(light_orig = x * sd_light + mean_light)
p_overall <- ggplot() +
geom_hex(data = plant_with_light,
aes(x = weekly_avg_SlrW, y = daily_growth), bins = 35) +
scale_fill_viridis_c(name = "Count") +
geom_ribbon(data = pred_all,
aes(x = light_orig, ymin = conf.low, ymax = conf.high),
alpha = .22, fill = "grey60") +
geom_line(data = pred_all,
aes(x = light_orig, y = predicted), linewidth = 1) +
labs(title = "Effect of Weekly Light on Daily Growth (overall)",
x = "Weekly Avg Light (W/m²)",
y = "Predicted Daily Growth (cm/day)") +
theme_bw() +
theme(panel.grid.minor = element_blank())
p_overall
p_facet <- ggplot(plant_with_light,
aes(weekly_avg_SlrW, daily_growth)) +
facet_wrap(~ parent_pop, ncol = 6) +
geom_point(alpha = .15, size = .6, color = "grey35") +
geom_smooth(method = "lm", se = FALSE, linewidth = .8) +
labs(title = "Light–Growth relationship by population",
x = "Weekly Avg Light (W/m²)",
y = "Daily Growth (cm/day)") +
theme_bw() +
theme(strip.background = element_rect(fill = "grey95", color = NA),
strip.text = element_text(face = "bold"),
panel.grid.minor = element_blank())
p_facet
View(out)
#slope and standard deviation of fixed effects
b_fix  <- fixef(growth_light.lmer)["weekly_avg_SlrW2"]
V_fix  <- vcov(growth_light.lmer)["weekly_avg_SlrW2","weekly_avg_SlrW2"]
#slope and standard deviation of random effects
re <- ranef(growth_light.lmer, condVar = TRUE)
re_pop <- re$parent_pop
postVar <- attr(re$parent_pop, "postVar")
sl_col <- which(colnames(re_pop) == "weekly_avg_SlrW2")
#create a tibble and data processing
growth_light.slope <- tibble(
parent_pop   = rownames(re_pop),
rand_slope   = re_pop[ , "weekly_avg_SlrW2"],
rand_var     = sapply(seq_len(dim(postVar)[3]), function(i) postVar[sl_col, sl_col, i])
) %>%
mutate(
slope_SD   = b_fix + rand_slope,
se_SD      = sqrt(V_fix + rand_var),
lower_SD   = slope_SD - 1.96*se_SD,
upper_SD   = slope_SD + 1.96*se_SD
)
sd_light <- sd(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
growth_light.slope <- growth_light.slope %>%
mutate(
slope_per_Wm2 = slope_SD / sd_light,
lower_per_Wm2 = lower_SD / sd_light,
upper_per_Wm2 = upper_SD / sd_light
)
#plot
ggplot(growth_light.slope, aes(x = reorder(parent_pop, slope_per_Wm2), y = slope_per_Wm2)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_pointrange(aes(ymin = lower_per_Wm2, ymax = upper_per_Wm2), linewidth = .6) +
coord_flip() +
labs(title = "Population-specific slopes with 95% CI (from random-slope LMM)",
x = "Population", y = "Slope (cm/day per W/m²)") +
theme_minimal(base_size = 12)
#slope and standard deviation of fixed effects
b_fix  <- fixef(growth_light.lmer)["weekly_avg_SlrW2"]
V_fix  <- vcov(growth_light.lmer)["weekly_avg_SlrW2","weekly_avg_SlrW2"]
#slope and standard deviation of random effects
re <- ranef(growth_light.lmer, condVar = TRUE)
re_pop <- re$parent_pop
postVar <- attr(re$parent_pop, "postVar")
sl_col <- which(colnames(re_pop) == "weekly_avg_SlrW2")
#create a tibble and data processing
pop_slope <- tibble(
parent_pop   = rownames(re_pop),
rand_slope   = re_pop[ , "weekly_avg_SlrW2"],
rand_var     = sapply(seq_len(dim(postVar)[3]), function(i) postVar[sl_col, sl_col, i])
) %>%
mutate(
slope_SD   = b_fix + rand_slope,
se_SD      = sqrt(V_fix + rand_var),
lower_SD   = slope_SD - 1.96*se_SD,
upper_SD   = slope_SD + 1.96*se_SD
)
sd_light <- sd(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
pop_slope <- pop_slope %>%
mutate(
slope_per_Wm2 = slope_SD / sd_light,
lower_per_Wm2 = lower_SD / sd_light,
upper_per_Wm2 = upper_SD / sd_light
)
#plot
ggplot(pop_slope, aes(x = reorder(parent_pop, slope_per_Wm2), y = slope_per_Wm2)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_pointrange(aes(ymin = lower_per_Wm2, ymax = upper_per_Wm2), linewidth = .6) +
coord_flip() +
labs(title = "Population-specific slopes with 95% CI (from random-slope LMM)",
x = "Population", y = "Slope (cm/day per W/m²)") +
theme_minimal(base_size = 12)
pop_slope <- pop_slope %>%
mutate(
slope_per_Wm2 = slope_SD / sd_light,
lower_per_Wm2 = lower_SD / sd_light,
upper_per_Wm2 = upper_SD / sd_light
)%>%
select(parent_pop, slope_per_Wm2, lower_per_Wm2, upper_per_Wm2)
pop_slope
pop_slope
View(pop_slope)
pop_slope
write.csv(pop_slope, "population_slopes.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(lubridate)
library(janitor)
library(purrr)
library(readr)
library(ggthemes)
library(ggeffects)
library(lme4)
library(dplyr)
library(ggplot2)
#install.packages("emmeans")
library(emmeans)
#install.packages("broom.mixed")
library(broom.mixed)
library(viridis)
library(nlme)
library(mgcv)
#setwd("C:/Users/Tobyz/Desktop/S.tort-light-growth/Data")
plant <- read.csv("Data/WL2-2023_Size_Combined.csv") %>%
clean_names() %>%
mutate(survey_date = as.Date(survey_date, format = "%m/%d/%Y"))
summary(plant)
#import light data
light_raw <- read_csv("Data/IntBioHalfHourTable_clean.txt")
#weekly measurement
weekly_light <- light_raw %>%
mutate(
timestamp = ymd_hms(TIMESTAMP),
SlrW_Avg = as.numeric(SlrW_Avg),  # turn into number format
week = floor_date(timestamp, "week")
) %>%
group_by(week) %>%
summarise(
weekly_avg_SlrW = mean(SlrW_Avg, na.rm = TRUE),
.groups = "drop"
)
# result
print(weekly_light)
#PID
plant_growth <- plant %>%
unite("PID", genotype:rep, sep = "_", remove = FALSE) %>%
mutate(survey_date = as.Date(survey_date))
#find out plants with negative growth
plant_growth %>%
arrange(PID, survey_date) %>%  # arrange in time sequence
group_by(PID) %>%
mutate(growth = height_cm - lag(height_cm)) %>%  # find out the diff btw nearby dates
summarise(has_negative_growth = any(growth < 0, na.rm = TRUE)) %>%
filter(has_negative_growth) -> neg_growth_plants
neg_growth_plants
#find out tolerance value
neg_growth_values <- plant_growth %>%
arrange(PID, survey_date) %>%
group_by(PID) %>%
mutate(growth = height_cm - lag(height_cm)) %>%
ungroup() %>%
filter(growth < 0)
ggplot(neg_growth_values, aes(x = growth)) +
geom_histogram(binwidth = 0.5, fill = "red", color = "black") +
labs(
title = "Distribution of Negative Growth Values",
x = "Height Decrease (cm)",
y = "Count"
) +
theme_minimal()
#filter out plants with negative growth < -5
plant_growth_cleaned <- plant_growth
repeat {
plant_growth_cleaned <- plant_growth_cleaned %>%
arrange(PID, survey_date) %>%
group_by(PID) %>%
mutate(growth = height_cm - lag(height_cm)) %>%
filter(is.na(growth) | growth >= -5) %>%
select(-growth) %>%
ungroup()
check <- plant_growth_cleaned %>%
arrange(PID, survey_date) %>%
group_by(PID) %>%
mutate(growth = height_cm - lag(height_cm)) %>%
filter(growth < -5)
if (nrow(check) == 0) break
}
#define daily growth rate
plant_growth_daily <- plant_growth_cleaned %>%
arrange(PID, survey_date) %>%
group_by(PID) %>%
mutate(
prev_height = lag(height_cm),
prev_date = lag(survey_date),
days_elapsed = as.numeric(survey_date - prev_date),
daily_growth = (height_cm - prev_height) / days_elapsed
) %>%
ungroup()
#Align plant growth data to week
plant_weekly <- plant_growth_daily %>%
filter(!is.na(daily_growth), days_elapsed > 0) %>%
mutate(week = floor_date(survey_date, "week"))
#Adds `weekly_avg_SlrW` to plant data
plant_with_light <- plant_weekly %>%
left_join(weekly_light, by = "week")
#Calculate correlation
cor_result <- cor(
plant_with_light$daily_growth,
plant_with_light$weekly_avg_SlrW,
use = "complete.obs"
)
print(cor_result)
#Plot correlation
ggplot(plant_with_light, aes(x = weekly_avg_SlrW, y = daily_growth)) +
geom_point(alpha = 0.2) +
geom_smooth(method = "lm", color = "red") +
labs(title = "Correlation between Light and Growth", x = "Weekly Avg Light (SlrW)", y = "Daily Growth (cm/day)") +
theme_bw()
#Standardization
plant_with_light$weekly_avg_SlrW2 <- scale(plant_with_light$weekly_avg_SlrW, center = TRUE, scale = TRUE)
mean_light <- mean(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
sd_light   <- sd(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
#Change Data type
plant_with_light <- plant_with_light %>%
mutate(
parent_pop = factor(parent_pop),
PID        = factor(PID),
block      = factor(block)
)
growth_light.lmer <- lmer(
daily_growth ~ weekly_avg_SlrW2 +
(1 + weekly_avg_SlrW2 | parent_pop),
data = plant_with_light, REML = TRUE
)
summary(growth_light.lmer)
#Unscaling
pred_all <- ggpredict(growth_light.lmer, terms = "weekly_avg_SlrW2") %>%
as.data.frame() %>%
mutate(light_orig = x * sd_light + mean_light)
#Plot
p_overall <- ggplot() +
geom_hex(data = plant_with_light,
aes(x = weekly_avg_SlrW, y = daily_growth), bins = 35) +
scale_fill_viridis_c(name = "Count") +
geom_ribbon(data = pred_all,
aes(x = light_orig, ymin = conf.low, ymax = conf.high),
alpha = .22, fill = "grey60") +
geom_line(data = pred_all,
aes(x = light_orig, y = predicted), linewidth = 1) +
labs(title = "Effect of Weekly Light on Daily Growth (overall)",
x = "Weekly Avg Light (W/m²)",
y = "Predicted Daily Growth (cm/day)") +
theme_bw() +
theme(panel.grid.minor = element_blank())
p_overall
p_facet <- ggplot(plant_with_light,
aes(weekly_avg_SlrW, daily_growth)) +
facet_wrap(~ parent_pop, ncol = 6) +
geom_point(alpha = .15, size = .6, color = "grey35") +
geom_smooth(method = "lm", se = FALSE, linewidth = .8) +
labs(title = "Light–Growth relationship by population",
x = "Weekly Avg Light (W/m²)",
y = "Daily Growth (cm/day)") +
theme_bw() +
theme(strip.background = element_rect(fill = "grey95", color = NA),
strip.text = element_text(face = "bold"),
panel.grid.minor = element_blank())
p_facet
#slope and standard deviation of fixed effects
b_fix  <- fixef(growth_light.lmer)["weekly_avg_SlrW2"]
V_fix  <- vcov(growth_light.lmer)["weekly_avg_SlrW2","weekly_avg_SlrW2"]
#slope and standard deviation of random effects
re <- ranef(growth_light.lmer, condVar = TRUE)
re_pop <- re$parent_pop
postVar <- attr(re$parent_pop, "postVar")
sl_col <- which(colnames(re_pop) == "weekly_avg_SlrW2")
#create the tibble of slopes for each population
pop_slope <- tibble(
parent_pop   = rownames(re_pop),
rand_slope   = re_pop[ , "weekly_avg_SlrW2"],
rand_var     = sapply(seq_len(dim(postVar)[3]), function(i) postVar[sl_col, sl_col, i])
) %>%
mutate(
slope_SD   = b_fix + rand_slope,
se_SD      = sqrt(V_fix + rand_var),
lower_SD   = slope_SD - 1.96*se_SD,
upper_SD   = slope_SD + 1.96*se_SD
)
sd_light <- sd(plant_with_light$weekly_avg_SlrW, na.rm = TRUE)
pop_slope <- pop_slope %>%
mutate(
slope_per_Wm2 = slope_SD / sd_light,
lower_per_Wm2 = lower_SD / sd_light,
upper_per_Wm2 = upper_SD / sd_light
)%>%
select(parent_pop, slope_per_Wm2, lower_per_Wm2, upper_per_Wm2)
pop_slope
write.csv(pop_slope, "population_slopes.csv", row.names = FALSE)
#plot
ggplot(pop_slope, aes(x = reorder(parent_pop, slope_per_Wm2), y = slope_per_Wm2)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_pointrange(aes(ymin = lower_per_Wm2, ymax = upper_per_Wm2), linewidth = .6) +
coord_flip() +
labs(title = "Population-specific slopes with 95% CI (from random-slope LMM)",
x = "Population", y = "Slope (cm/day per W/m²)") +
theme_minimal(base_size = 12)
